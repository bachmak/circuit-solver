#pragma once

#include <cstddef>

enum class Type
{
	R,
	E,
	J
};

// класс для представления элемента схемы
// каждый элемент характеризуется:
// 1) типом type (резистивный элемент, источник напряжения, источник тока)
// 2) значением электрического параметра (сопротивление, напряжение, ток)
// 3) двумя номерами пинов, с которыми соединены пины этого элемента
// замечание: собственные номера пинов в объекте не хранятся, так как предполагается,
// что элементы будут храниться в последовательном списке, порядок хранения в котором
// совпадает с порядком создания. поэтому номер первого пина элемента можно вычислить
// путем умножения номера элемента в списке на 2
class Element
{
private:
	Type mType;																			// тип
	double mValue;																		// значение
	int mLinkedPin[2];																	// номера соседних пинов

public:
	Element(Type type, double value, int linkedPin0, int linkedPin1);					// конструктор
	Type getType() const;																// геттер типа
	double getValue() const;															// геттер значения
	void setValue(double value);														// сеттер значения
	const double* getValuePointer() const;												// геттер указателя на значение
	int getLinkedPin(size_t number) const;												// геттер номера присоединенного пина
};
